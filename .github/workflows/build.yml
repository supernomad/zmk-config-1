on: [push, pull_request, workflow_dispatch]

name: Build

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:2.5
    name: Build
    strategy:
      matrix:
        board:
          - nice_nano_v2
        shield:
          - sofle_rgb_left
          - sofle_rgb_right
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: West Init
        run: west init -l config
      - name: West Update
        run: west update
      - name: West Zephyr export
        run: west zephyr-export

      - name: Prepare variables
        id: variables
        run: |
          SHIELD_ARG="-DSHIELD=${{ matrix.shield }}"
          ARTIFACT_NAME="${{ matrix.shield }}-${{ matrix.board }}-zmk"

          echo ::set-output name=shield-arg::${SHIELD_ARG}
          echo ::set-output name=artifact-name::${ARTIFACT_NAME}
      - name: Build
        run: west build -s zmk/app -b ${{ matrix.board }} -- ${{ steps.variables.outputs.shield-arg }} -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
      - name: DTS File
        if: ${{ always() }}
        run: cat -n build/zephyr/nice_nano_v2.dts.pre.tmp
      - name: Rename zmk.uf2
        run: cp build/zephyr/zmk.uf2 ${{ matrix.shield }}-${{ matrix.board }}-zmk.uf2

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: "firmware-${{ matrix.shield }}-${{ matrix.board }}"
          path: ${{ matrix.shield }}-${{ matrix.board }}-zmk.uf2

  archive:
    name: Create Arvhice
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: LS Artifacts
        run: ls -lh artifacts/
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: artifacts/*
