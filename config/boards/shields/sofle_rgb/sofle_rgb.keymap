#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <11>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <LOWER RAISE>;
      then-layer = <ADJUST>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC         &kp N1   &kp N2    &kp N3    &kp N4   &kp N5                               &kp N6    &kp N7   &kp N8    &kp N9  &kp N0    &kp BACKSPACE
        &kp TAB         &kp Q    &kp W     &kp E     &kp R    &kp T                                &kp Y     &kp U    &kp I     &kp O   &kp P     &kp BACKSLASH
        &mt LSHIFT LBKT &kp A    &kp S     &kp D     &kp F    &kp G                                &kp H     &kp J    &kp K     &kp L   &kp SEMI  &kp SINGLE_QUOTE
        &mt LCTRL  LPAR &kp Z    &kp X     &kp C     &kp V    &kp B     &kp K_PP      &out OUT_TOG &kp N     &kp M    &kp COMMA &kp DOT &kp SLASH &kp ENTER
                                 &kp LALT  &kp MINUS &kp LBKT &mo LOWER &nt LCMD LBRC &kp SPACE    &mo RAISE &kp RBKT &kp EQUAL &kp RALT
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    lower_layer {
      bindings = <
        &trans &kp F1 &kp F2 &kp F3 &kp F4    &kp F5             &kp F6   &kp F7 &kp F8   &kp F9    &kp F10 &kp DELETE
        &trans &none  &none  &none  &none     &none              &none    &none  &none    &none     &none   &kp F11
        &trans &none  &none  &none  &kp LCTRL &kp LSHIFT         &kp LEFT &kp UP &kp DOWN &kp RIGHT &none   &kp F12
        &trans &none  &none  &none  &none     &none  &none &none &none    &none  &none    &none     &none   &kp F13
                      &none  &none  &none     &trans &none &none &trans   &none  &none    &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    raise_layer {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                       &none  &none     &none     &none  &none &bt BT_CLR
        &none &none        &none        &none        &none        &none                              &none  &none     &none     &none  &none &none
        &none &bt BT_PRV   &none        &bt BT_NXT   &none        &none                              &none  &kp MINUS &kp EQUAL &none  &none &none
        &none &none        &none        &none        &none        &none        &none           &none &none  &none     &none     &none  &none &none
                           &none        &none        &none        &trans       &rgb_ug RGB_TOG &none &trans &none     &none     &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    adjust_layer {
      bindings = <
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &kp LSHIFT &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans
                          &trans &trans &trans &trans &kp RET &trans &trans &trans &trans &trans
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

  };
};

// layer sample
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none &none &none &none &none &none &none &none &none
//                     &none &none &none &none &none &none &none &none &none &none
