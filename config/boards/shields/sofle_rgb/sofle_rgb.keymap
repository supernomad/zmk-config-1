#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <LOWER RAISE>;
      then-layer = <ADJUST>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC         &kp N1   &kp N2    &kp N3    &kp N4   &kp N5                               &kp N6    &kp N7   &kp N8    &kp N9  &kp N0    &kp BACKSPACE
        &kp TAB         &kp Q    &kp W     &kp E     &kp R    &kp T                                &kp Y     &kp U    &kp I     &kp O   &kp P     &kp BACKSLASH
        &mt LSHIFT LBKT &kp A    &kp S     &kp D     &kp F    &kp G                                &kp H     &kp J    &kp K     &kp L   &kp SEMI  &kp SINGLE_QUOTE
        &mt LCTRL  LPAR &kp Z    &kp X     &kp C     &kp V    &kp B     &kp K_PP      &out OUT_TOG &kp N     &kp M    &kp COMMA &kp DOT &kp SLASH &kp ENTER
                                 &kp LALT  &kp MINUS &kp LBKT &mo LOWER &mt LCMD LBRC &kp SPACE    &mo RAISE &kp RBKT &kp K_APP &kp RALT
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    lower_layer {
      bindings = <
        &kp GRAVE &kp F1  &kp F2  &kp F3      &kp F4    &kp F5             &kp F6   &kp F7   &kp F8   &kp F9    &kp F10 &kp DELETE
        &trans    &kp F11 &kp F12 &none       &none     &none              &none    &none    &none    &none     &none   &none
        &trans    &none   &none   &kp LSHIFT  &kp LCTRL &none              &kp LEFT &kp DOWN &kp UP   &kp RIGHT &none   &kp PG_UP
        &trans    &none   &none   &none       &none     &none  &none &none &none    &none    &none    &kp HOME  &kp END &kp PG_DN
                          &none   &none       &none     &trans &none &none &trans   &none    &none    &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    raise_layer {
      bindings = <
        &kp GRAVE &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3      &bt BT_SEL 4                 &none             &none            &none     &none  &none &kp DELETE
        &trans    &none        &none        &none        &none             &none                        &none             &none            &none     &none  &none &none
        &trans    &bt BT_PRV   &bt BT_CLR   &bt BT_NXT   &none             &none                        &none             &kp MINUS        &kp EQUAL &none  &none &none
        &trans    &none        &none        &none        &ext_power EP_OFF &ext_power EP_ON &none &none &ext_power EP_OFF &ext_power EP_ON &none     &none  &none &none
                               &none        &none        &none             &trans           &none &none &trans            &none            &none     &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    adjust_layer {
      bindings = <
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &kp LSHIFT &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans
                          &trans &trans &trans &trans &kp RET &trans &trans &trans &trans &trans
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

  };
};

// layer sample
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none &none &none &none &none &none &none &none &none
//                     &none &none &none &none &none &none &none &none &none &none
